(define (domain domainName)
  (:requirements :adl :fluents)
  (:constants constA constB)
  (:predicates (pred ?a))
  (:functions (numFunc1 ?a) (numFunc2 ?a) (numFunc3 ?a) (numFunc4 ?a)
              (numFunc5 ?a) - number (objFunc ?a) - object
  )
  (:action actionName
    :parameters (?a)
    :precondition ()
    :effect (and
              (pred ?a)
              (not (pred ?a))
              (assign (numFunc1 ?a) 5)
              (increase (numFunc2 ?a) 5)
              (decrease (numFunc3 ?a) 5)
              (scale-up (numFunc4 ?a) 5)
              (scale-down (numFunc5 ?a) 5)
              (assign (objFunc ?a) ?a)
              (forall (?x) (pred ?x))
              (when (pred ?a) (pred ?a))
            )
  )
)
