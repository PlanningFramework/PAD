(define (domain domainName)
  (:requirements :action-costs :adl)
  (:predicates (predA) (predB) (predC) (predD) (predE) (predF))
  (:functions (total-cost) - number)
  (:action actionName1
    :parameters ()
    :precondition (and (predA) (predB))
    :effect (and (predD)
                 (increase total-cost 2)
            )
  )
  (:action actionName2
    :parameters ()
    :precondition (and (predB) (predC))
    :effect (and (predE)
                 (increase total-cost 5)
            )
  )
  (:action actionName3
    :parameters ()
    :precondition (predC)
    :effect (and (predD)
                 (predE)
                 (increase total-cost 9)
            )
  )
  (:action actionName4
    :parameters ()
    :precondition (and (predD) (predE))
    :effect (and (predF)
                 (increase total-cost 2)
            )
  )
  (:action actionDummy
    :parameters ()
    :precondition (and (predD) (not (predD)))
    :effect (and (predA)
                 (predB)
                 (predC)
            )
  )
)
