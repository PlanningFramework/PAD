(define (domain domainName)
  (:requirements :typing :adl :fluents)
  (:constants constA constB)
  (:predicates (pred ?a) (predTrue) (predFalse))
  (:functions (objFunc) - object)
  (:action actionName
    :parameters ()
    :precondition (and
                    (predTrue)
                    (not (predFalse))
                    (and (predTrue) (predTrue))
                    (or (predTrue) (predFalse))
                    (and
                      (imply (predTrue) (predTrue))
                      (imply (predFalse) (predFalse))
                      (imply (predFalse) (predTrue))
                      (not (imply (predTrue) (predFalse)))
                    )
                    (and (= 0 0) (< 4 6) (> 6 4) (<= 5 5) (not (>= 1 2)))
                    (exists (?x) (pred ?x))
                    (= (objFunc) constA)
                  )
  )
  (:action actionName2
    :parameters ()
    :precondition (and
                    (predFalse)
                    (not (predTrue))
                    (and (predTrue) (predFalse))
                    (or (predFalse) (predFalse))
                    (or (= 0 6) (< 8 6) (> 2 4) (<= 6 5) (not (>= 5 2)))
                    (forall (?x) (pred ?x))
                    (= (objFunc) constB)
                  )
  )
  (:action actionName3
    :parameters (?a)
    :precondition (pred ?a)
  )
)
